auth: []
# configure basic auth here with htpasswd like in example:
# `htpasswd -n <username>` and put your output here 
# the following password for "user1" is also "user1"
# auth:
#   - user1:$apr1$W9rjKe2S$IPk43LteyleuKH8lsAXel.

configurations: []
# examples of configurations
# configurations:
#   - type: server
#     content: |+
#       listen 80;
#       server_name zadanie.sofixit.pl;
#       root /var/www;
#       index index.html;
#   - type: upstream
#     name: some-other-proxy
#     content: server 127.0.0.1:80;

tls: {}
# put your base64 encoded PEM file contents in key and cert
# right here you have already encoded with common name 'nginx-sofixit'
# the "redirect_port" setting is port for your ssl traffic
# tls:
#   redirect_port: 31443
#   key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdXVKY0FIcStjWlQzWWlUVm5CYW5EYmRGeU9zdUVHais5TVhkT3hVdmZ5YXh3ams4CkNGcjJIVjBVQk1MSk00Z2ZHV3VKdHlRM0xRNkFwN3A0bXk5VTZUbGhZdG1TeGJxUXZlSzUwMVlOUmM2N0V5QmEKVWR0VUh0UXM1UjNBWmlHSXg3SzcyeE9rcXZjZnVRNHhEL1J3MFR1R1JJbDRmTFZxUHlCaEY5Z0dTR2FYNVd4MApTcG91d2JnODZFZTlTblpyR1A3WWZaOWpCUS8xR2liWk9wVTdxcmluQTNoUGpob2tsRnpHU3RQYVowNkhobk9pCmRxU2tSeS9EWm1EcWFMOW9zWGlLQ2cyWTQ1SENxVndjZTQ4YkdwWE5WSlRQVDNDQnpKUlc1MEVUM3piVVdRNlEKRFBkcUQxSGVQMWp2OHNwWlp2WDV1SmRYQ0JqUXV0b0FXOHQ3NXdJREFRQUJBb0lCQVFDZ0NWdno1U2pWSjFZNQpxNFZwWjFTalFFRDRiNzFBdkVrbzM1QTJHa3hVUEpTWTJGNTZZVHJGcG9HUUdpWW1oUGpzMGRSYkN4NWM3VUJyCllob0orcHhpSklzckZWckZES0VLbXUrNjlNUGs5Y1hwK1JpZlpJMUM0VHVZOE1Oa01tOXBZN3ZQUGFFVDd4QXgKYnQvQTQva0FsRkxFdWx4OW52VmZIYUZIdyt5TmJpVS9RSlVhOENza3JmQTRoRGZ2c0ZocXNHM25YMk43d1BKRwpNNDBnUmhiNlpxUlRqdzhrbkMzTU1QQ0Z0Nkg1S2lUMFIremp5dEVUWHZNNWZkTVVkOHV3eXBEWXpWN0YwUTBuClZqTmxVZEg2Vloya0RkN2EyK084U085ZVhHN3JrN2R1TjlNYkZiR1pDNUZrbzZPdG5uR01MVXY1eHBjemtubk4KclRYVnFtbUJBb0dCQVBIVktJZi80RUc0K0p6dW53MG1EdksrNzRzR3YybWhLNUdSZFBFZWk3WDhFWDVnZVltaAp2VmdQVVNsSTFJWWdXZWx6c1RLdGhCZ216RHZCdDJNd055M0I0dmVUb01qZmdCSDVCRk5nVHZhbEhGYjdyeGQyCmdjaGZFeU9VeEtpbEpYMFlFZzRPazg1SVFGNFp0eCtlbkFyUjdMT040Z2xPdkxwd0lIYUo0VVNoQW9HQkFNWFYKSHk3aCtzRGlXcVhMS28wNFNDalpjd0ZGSmhTVW9sL3hnbnEzZGJ1NWU5STl1NS95SVozRFFyL1dHeU14SDZzVQpxWWFNZk82TnMwTVNwem9DL3BkUUFQOHp5akF2V1czTUlCWWY5aXJZSWRxNm0xRHJLQ2FhQitsNWtkeHp2WVg5CnZvZUNTMjN6RW9MZnN5QzBwK2JnM3lsbHJUVUNXRlROUjNVcnNXdUhBb0dCQUtaekJMYTIwMi9wRkpWUFdJSUEKVkFHWWtkK3JBVXgrOWpIM1gvb21BQnQrSjd4SVF0OE1SL3E0Y0RCdVJIa2RBMFcvcjVNbUF1bHNxdDNtYzRiOQp4THpsMm9aMVFoR0FZL0g2NTVOTGtvNEpEdngvdHYvN1BWRGd2NWVaNmRINStWZWtuYWkzTjl5ZnRrNE9mUkJ5Clp3eTdlS1FOWUNydjJzNm9KbS93YnZDQkFvR0FCVitJZlVsOStnY3IxeHp4aHV4a2FWZWVuQVk0eG81UzZyQXcKand5MGtlaXp5RDRNL29jaENwdm5FRGJNZmVRenEvM2ZyTnZiK002NGM3WHAvTlZmL05RYmN0TUJSdFhDWkEwTApRZzZVTFEyNXZhc2IxTkxPUUY0bW9OekFiWEJuVVdCVzhHOUZoVEw0NmIwUnJHMjdzYldoMmduODdsZWw5b2VzCnpTM21uN2tDZ1lFQTRLMXpocWlEeDIxQ1Q1U09jQ0pZTnk3TDJZREdUTTBvblNxVmM0MEhxZFNObkwzNm9sQlYKdXpZT1dlUkJIdUhaZDJXanBIR3k2YzBMSzFEZlI2cm9hRWdZUlBqZVdad3BSNFdaazlHWEpuOFhzMHRUUUtwdwpnSjJpZnphM2VXa1FQdHdjYlhvdEJsaDZZYkFiM3dIbDlMd1N2Umw5cHdFQ3Q5ak1VQnZ6WjVBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
#   cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lVSVVDY2xnYlNYZ2lrTE1yZFFHL0NxT2dJMHRNd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1l6RUxNQWtHQTFVRUJoTUNVRXd4RkRBU0JnTlZCQWdNQzAxaGVtOTNhV1ZqYTJsbE1TRXdId1lEVlFRSwpEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXhHekFaQmdOVkJBTU1FbnBoWkdGdWFXVXVjMjltCmFYaHBkQzV3YkRBZUZ3MHlNakF6TVRjeU1qRTRNVEJhRncwME1qQXpNVEl5TWpFNE1UQmFNR014Q3pBSkJnTlYKQkFZVEFsQk1NUlF3RWdZRFZRUUlEQXROWVhwdmQybGxZMnRwWlRFaE1COEdBMVVFQ2d3WVNXNTBaWEp1WlhRZwpWMmxrWjJsMGN5QlFkSGtnVEhSa01Sc3dHUVlEVlFRRERCSjZZV1JoYm1sbExuTnZabWw0YVhRdWNHd3dnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzY0bHdBZXI1eGxQZGlKTldjRnFjTnQwWEkKNnk0UWFQNzB4ZDA3RlM5L0pySENPVHdJV3ZZZFhSUUV3c2t6aUI4WmE0bTNKRGN0RG9DbnVuaWJMMVRwT1dGaQoyWkxGdXBDOTRyblRWZzFGenJzVElGcFIyMVFlMUN6bEhjQm1JWWpIc3J2YkU2U3E5eCs1RGpFUDlIRFJPNFpFCmlYaDh0V28vSUdFWDJBWklacGZsYkhSS21pN0J1RHpvUjcxS2Rtc1kvdGg5bjJNRkQvVWFKdGs2bFR1cXVLY0QKZUUrT0dpU1VYTVpLMDlwblRvZUdjNkoycEtSSEw4Tm1ZT3BvdjJpeGVJb0tEWmpqa2NLcFhCeDdqeHNhbGMxVQpsTTlQY0lITWxGYm5RUlBmTnRSWkRwQU05Mm9QVWQ0L1dPL3l5bGxtOWZtNGwxY0lHTkM2MmdCYnkzdm5BZ01CCkFBR2pVekJSTUIwR0ExVWREZ1FXQkJRSTlqRStseVhrU3J6ZTJ4ZFAwWnZSVDZRUCt6QWZCZ05WSFNNRUdEQVcKZ0JRSTlqRStseVhrU3J6ZTJ4ZFAwWnZSVDZRUCt6QVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUI3UzlzanBSM3RvUTQyRWE5aTkxd29MZTNzMmNxLy9NRkVYdzl2T2Z1Y0lCaCtNRGx6Cm9GU1FKbmJKeURMeFgwS2pPOUJCdTV5bHZVdEdNN2s3dE8xRnpWVHJzak1UOWtTNmxrTXRXdllJU2gwRmt1aWQKVkw5V2QvUlE4enQ5bm9HK1JBeDBEYVdUSTBNTEJKSlFGdDRvS056MlN3K1FYaXR0VmpwT056U0pTT1QxQSszYgoyMEg2R3JWaWRNVTUwb1pyVjlreWN0bjhyMWNlRjJKRkZrcWlSSENDd1lSd24vZlhJcjlmbm05ZXFlWWlMWXBDCmF4bjFocXJxVWVDU1p3dWZlQVp5bmoyMUVIN05BZzd3UmpGMTZ2bkJzbVRyV3Y3TXQ1bXNhUE9iTWp2bk9DaDEKelRmTHU5cnU1dnVoSXk2M3Z3empSM0RISmpZYS9XOFU0WFY3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K